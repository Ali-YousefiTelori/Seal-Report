@using QuestPDF.Infrastructure
@using QuestPDF.Fluent
@using QuestPDF.Helpers
@using Seal.Model
@using Seal.Renderer
@{
    Report report = Model;
    ReportView view = report.CurrentView;

    PDFRenderer renderer = view.PDFRenderer;
    PDFResult result = report.PDFResult;
    var title = report.TranslateViewName(view.GetBoolValue("widget_name_as_title") ? view.Name : view.GetValue("widget_title"));

    result.Container.Column(column =>
    {
        var widget = column.Item();
        if (report.ExecutionView.Renderer.GetBoolValue("widget_show_entire")) widget = widget.ShowEntire();

        widget.Column(col =>
        {
            var fontColor = report.ExecutionView.Renderer.GetValue("title_font_color");
            col.Item()
                .Padding(5)
                .BorderBottom(1)
                .BorderColor(fontColor)
                .Text(title)
                .Style(TextStyle.Default.FontSize(14).SemiBold().FontColor(fontColor));

            foreach (ReportView childView in view.Views.OrderBy(i => i.SortOrder))
            {
                result.Container = col.Item();
                childView.Parse();
            }
        });
    });
}