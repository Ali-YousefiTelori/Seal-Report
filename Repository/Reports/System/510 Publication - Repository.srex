<?xml version="1.0" encoding="utf-8"?><Report xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><CurrentViewGUID>15677b05-8256-45f0-b8f3-56959482813c</CurrentViewGUID><GUID>9aba89d7-b49f-4242-bdf2-e6e706f7123c</GUID><ViewGUID>15677b05-8256-45f0-b8f3-56959482813c</ViewGUID><InputValues><ReportRestriction><GUID>9082adcd-11bd-43fc-b3c6-4dd9269566a1</GUID><Type>Text</Type><DisplayName>Repository Source Folders</DisplayName><DisplayOrder>1</DisplayOrder><EnumGUID>b3a1f4c6-fae8-4a84-b120-9593fb1c2b9c</EnumGUID><PivotPosition>Row</PivotPosition><TypeEd>Text</TypeEd><EnumGUIDEL>b3a1f4c6-fae8-4a84-b120-9593fb1c2b9c</EnumGUIDEL><Prompt>Prompt</Prompt><TypeRe>Text</TypeRe><ChangeOperator>false</ChangeOperator><EnumGUIDRE>b3a1f4c6-fae8-4a84-b120-9593fb1c2b9c</EnumGUIDRE><DisplayOrderRE>1</DisplayOrderRE></ReportRestriction><ReportRestriction><GUID>f198c8dd-02be-43bb-ad64-4f306076c87c</GUID><Type>Text</Type><DisplayName>File Name Search Pattern</DisplayName><DisplayOrder>2</DisplayOrder><PivotPosition>Row</PivotPosition><TypeEd>Text</TypeEd><Prompt>PromptOneValue</Prompt><TypeRe>Text</TypeRe><ChangeOperator>false</ChangeOperator><DisplayOrderRE>2</DisplayOrderRE><Value1>*</Value1></ReportRestriction><ReportRestriction><GUID>b4477c5e-b0ac-4df1-922e-06b7a742204f</GUID><Type>Text</Type><DisplayName>Copy Sub-Folders</DisplayName><DisplayOrder>3</DisplayOrder><EnumGUID>4bcf1ccc-cb6b-446a-b6ee-0bc0ac4d2b15</EnumGUID><PivotPosition>Row</PivotPosition><TypeEd>Text</TypeEd><EnumGUIDEL>4bcf1ccc-cb6b-446a-b6ee-0bc0ac4d2b15</EnumGUIDEL><Prompt>PromptOneValue</Prompt><TypeRe>Text</TypeRe><ChangeOperator>false</ChangeOperator><EnumGUIDRE>4bcf1ccc-cb6b-446a-b6ee-0bc0ac4d2b15</EnumGUIDRE><DisplayOrderRE>3</DisplayOrderRE><EnumValues><string>Yes</string></EnumValues></ReportRestriction></InputValues><Sources><ReportSource><GUID>92a001bf-5000-4dfe-b5b6-d86accb65aff</GUID><Name>Main</Name><Connections><MetaConnection><GUID>67ad9065-d857-463d-acf4-923dacd1c053</GUID><Name>connection</Name><ConnectionString>Provider=SQLOLEDB;data source=localhost;initial catalog=adb;Integrated Security=SSPI;</ConnectionString></MetaConnection></Connections><ConnectionGUID>67ad9065-d857-463d-acf4-923dacd1c053</ConnectionGUID><IsNoSQL>true</IsNoSQL><MetaData><Tables><MetaTable><GUID>3988c23c-6ad6-40d7-b312-4a00f5f26b7c</GUID><Alias>SealMasterTable</Alias><DynamicColumns>true</DynamicColumns></MetaTable></Tables><Enums><MetaEnum><GUID>4bcf1ccc-cb6b-446a-b6ee-0bc0ac4d2b15</GUID><Name>YesNo</Name><Values><MetaEV><Id>Yes</Id></MetaEV><MetaEV><Id>No</Id></MetaEV></Values></MetaEnum><MetaEnum><GUID>b3a1f4c6-fae8-4a84-b120-9593fb1c2b9c</GUID><Name>Repository Folders</Name></MetaEnum></Enums></MetaData></ReportSource></Sources><Models><ReportModel><GUID>fc05615f-3ba8-4fd3-b87c-c8fbe3bd07dc</GUID><Name>Model</Name><SourceGUID>92a001bf-5000-4dfe-b5b6-d86accb65aff</SourceGUID></ReportModel></Models><Tasks><ReportTask><GUID>ccb62554-63e2-4cbc-9d18-e59099cb573c</GUID><Name>Publish Repository Files</Name><CancelReport>false</CancelReport><SourceGUID>92a001bf-5000-4dfe-b5b6-d86accb65aff</SourceGUID><Script>@using System.IO&#xD;
@using System.Net&#xD;
@{&#xD;
    ReportTask task = Model;&#xD;
    Report report = task.Report;&#xD;
    Repository repository = report.Repository;&#xD;
&#xD;
    var repositoryFolders = report.GetInputValueByName("Repository Source Folders");&#xD;
    var filter = report.GetInputValueByName("File Name Search Pattern").FirstStringValue;&#xD;
    var copySubFolders = report.GetInputValueByName("Copy Sub-Folders").FirstStringValue == "Yes";&#xD;
&#xD;
    //Configure the root repository destination folder:&#xD;
    var repositoryDestination = "";  // TO BE MODIFIED !&#xD;
    //repositoryDestination =@"\\wsl$\Ubuntu\seal\Repository"; //For file system (Ubuntu Sub-System)&#xD;
    //repositoryDestination = "/Repository/"; //FTP root folder&#xD;
    //repositoryDestination = "/wwwroot/Repository/"; //FTP root folder&#xD;
&#xD;
    //If not using the File System, configure a FTP device if necessary&#xD;
    OutputFileServerDevice device = null;&#xD;
    /*&#xD;
    device = new OutputFileServerDevice() { &#xD;
        Protocol = FileServerProtocol.FTP, &#xD;
        HostName = "127.0.0.1",&#xD;
        PortNumber = 21,&#xD;
        UserName = "tester",&#xD;
        ClearPassword = "password",&#xD;
    };&#xD;
    */&#xD;
    &#xD;
    if (string.IsNullOrEmpty(repositoryDestination)) {&#xD;
        throw new Exception("Configure the task first (Edit the 'Publish Repository Files' Task Script): Define at least the Repository Destination Folder...");&#xD;
    }&#xD;
    &#xD;
    //Customize the FtpGetRequest&#xD;
    OutputFileServerDevice.CustomFtpGetRequest ftpGetRequest = null;&#xD;
    if (device != null) {&#xD;
        ftpGetRequest = new OutputFileServerDevice.CustomFtpGetRequest(delegate(string destination, string method) {&#xD;
            FtpWebRequest request = (FtpWebRequest)WebRequest.Create(string.Format("ftp://{0}:{1}{2}", device.HostName, device.PortNumber, destination));&#xD;
            request.KeepAlive = true;&#xD;
            request.Method = method;&#xD;
            request.Credentials = new NetworkCredential(device.UserName, device.ClearPassword);&#xD;
&#xD;
            //SSL Management: Accept all certificates or add the certificate to the request&#xD;
            //request.EnableSsl = true;&#xD;
            //ServicePointManager.ServerCertificateValidationCallback += (sender, certificate, chain, sslPolicyErrors) =&gt; true;&#xD;
            //request.ClientCertificates = new X509CertificateCollection() { X509Certificate.CreateFromCertFile(@"C:\_dev\Tests\FileZillaKeys\c1.crt") } ;&#xD;
            return request;        &#xD;
        });    &#xD;
    }&#xD;
&#xD;
    //Repository folders&#xD;
    var dirs = new Dictionary&lt;string, string&gt;();&#xD;
    bool reportsDone = false, dashboardsDone = false;&#xD;
    foreach (var folder in repositoryFolders.EnumValues.ToList()) {&#xD;
        var dest = repositoryDestination;&#xD;
        if (!dest.EndsWith("/") || dest.EndsWith("\\")) {&#xD;
            dest += "\\";&#xD;
        }&#xD;
    &#xD;
        if (folder.StartsWith("ra:")) {&#xD;
            dirs.Add(repository.RepositoryPath, dest);&#xD;
            break;&#xD;
        }&#xD;
        if (folder.StartsWith("re:")) {&#xD;
            var sourcePath = folder.Substring(3);&#xD;
            var destPath = dest + Path.GetFileName(folder.Substring(3));&#xD;
            if (Path.GetFileName(destPath) == "Reports") { reportsDone = true; }&#xD;
            if (Path.GetFileName(destPath) == "Dashboards") { dashboardsDone = true; }&#xD;
            dirs.Add(sourcePath, destPath);&#xD;
        }&#xD;
        else if (folder.StartsWith("rf:") &amp;&amp; !reportsDone) {&#xD;
            var sourcePath = repository.ReportsFolder + folder.Substring(3);&#xD;
            var destPath = dest + "Reports/" + folder.Substring(3);&#xD;
            dirs.Add(sourcePath, destPath);&#xD;
        }&#xD;
        else if (folder.StartsWith("df:") &amp;&amp; !dashboardsDone) {&#xD;
            var sourcePath = folder.Substring(3);&#xD;
            var destPath = dest + Path.GetFileName(folder.Substring(3));&#xD;
            dirs.Add(sourcePath, destPath);&#xD;
        }&#xD;
    }        &#xD;
&#xD;
    foreach (var sourcePath in dirs.Keys) {&#xD;
        var destPath = dirs[sourcePath];&#xD;
        report.LogMessage("Copying directory '{0}' to '{1}' using {2}", sourcePath, destPath, device != null ? " FTP device": "File System");       &#xD;
        &#xD;
        if (device == null) {&#xD;
            FileHelper.CopyDirectory(sourcePath, destPath, copySubFolders, report, filter);&#xD;
        }&#xD;
        else {&#xD;
            device.FtpPutDirectory(sourcePath, destPath.Replace("\\","/"), copySubFolders, report, ftpGetRequest, filter);&#xD;
        }&#xD;
    }    &#xD;
}&#xD;
</Script><SortOrder>1</SortOrder></ReportTask></Tasks><Views><ReportView><GUID>15677b05-8256-45f0-b8f3-56959482813c</GUID><Name>View</Name><Views><ReportView><GUID>485ce093-5983-40e2-8c70-1418ab0bde9f</GUID><Name>Model</Name><Views><ReportView><GUID>70e07d50-727c-42ab-9f68-c097dec75ca4</GUID><Name>Model Container</Name><Views><ReportView><GUID>204b6713-46a0-4cec-8a93-c777f09c0037</GUID><Name>Page Table</Name><TemplateName>Page Table</TemplateName><SortOrder>1</SortOrder></ReportView><ReportView><GUID>30d8e2c2-340d-446e-9267-0dbb53aa1c38</GUID><Name>Chart JS</Name><TemplateName>Chart JS</TemplateName><SortOrder>2</SortOrder></ReportView><ReportView><GUID>d495653c-3b38-4396-8571-ab098fab9c21</GUID><Name>Chart NVD3</Name><TemplateName>Chart NVD3</TemplateName><SortOrder>3</SortOrder></ReportView><ReportView><GUID>d1e53208-c213-409a-bb0d-50ced7000ff0</GUID><Name>Chart Plotly</Name><TemplateName>Chart Plotly</TemplateName><SortOrder>4</SortOrder></ReportView><ReportView><GUID>7e173c42-c1d1-4e69-914d-c1be82ce9171</GUID><Name>Data Table</Name><TemplateName>Data Table</TemplateName><SortOrder>5</SortOrder></ReportView></Views><TemplateName>Model Container</TemplateName><SortOrder>1</SortOrder></ReportView></Views><TemplateName>Model</TemplateName><ModelGUID>fc05615f-3ba8-4fd3-b87c-c8fbe3bd07dc</ModelGUID><SortOrder>1</SortOrder></ReportView></Views><TemplateName>Report</TemplateName><Parameters><Parameter><Name>messages_mode</Name><Value>enabledshown</Value></Parameter><Parameter><Name>restrictions_per_row</Name><Value>3</Value></Parameter></Parameters><SortOrder>1</SortOrder></ReportView></Views><InitScript>@using System.IO&#xD;
@{&#xD;
    Report report = Model;&#xD;
	ReportExecutionLog log = report;&#xD;
&#xD;
    //Check Security: To be adapted to Publish from the Web Report Server itself&#xD;
    bool allowPublication = false;&#xD;
    if (report.ExecutionContext == ReportExecutionContext.DesignerReport) {&#xD;
        allowPublication = true;&#xD;
    }&#xD;
    //Or check for a special user or group to allow execution from the Web&#xD;
    //if (report.SecurityContext != null &amp;&amp; (report.SecurityContext.BelongsToGroup("aGroupName") || report.SecurityContext.UserName = "aUserName")) {&#xD;
    //    allowPublication = true;&#xD;
    //}&#xD;
    if (!allowPublication) {&#xD;
        throw new Exception("This report can only be executed from the Report Designer");&#xD;
    }&#xD;
&#xD;
    //Script executed when the report is initialized&#xD;
    log.LogMessage("Executing Init Script");&#xD;
    &#xD;
    //Fill repository enum&#xD;
    var foldersEnum = report.Sources[0].MetaData.Enums.FirstOrDefault(i =&gt; i.Name == "Repository Folders");&#xD;
    if (foldersEnum != null &amp;&amp; foldersEnum.Values.Count == 0) {&#xD;
        foldersEnum.Values.Add(new MetaEV() { Id = "ra:", Val = "Repository: Copy All Folders" });&#xD;
        foreach (var folder in Directory.GetDirectories(report.Repository.RepositoryPath))&#xD;
        {&#xD;
            var description = "Repository Folder: " + Path.GetFileName(folder);&#xD;
            if (Path.GetFileName(folder) == "Logs" || Path.GetFileName(folder) == "SpecialFolders") { continue; }&#xD;
            if (Path.GetFileName(folder) == "Settings") { description += " (Configuration,Translations)"; }&#xD;
            if (Path.GetFileName(folder) == "Sources") { description += " (Data Sources)"; }&#xD;
            foldersEnum.Values.Add(new MetaEV() { Id = "re:" + folder, Val = description });&#xD;
        }&#xD;
        foldersEnum.Values.Add(new MetaEV() { Id = "re:" + report.Repository.RepositoryPath + "\\SpecialFolders\\Schedules", Val = "Repository Folder: Schedules" });&#xD;
        &#xD;
        List&lt;string&gt; choices = new List&lt;string&gt;();&#xD;
        FileHelper.AddFolderChoices(report.Repository.ReportsFolder, "", choices);&#xD;
        foreach (var folder in choices) {&#xD;
            foldersEnum.Values.Add(new MetaEV() { Id = "rf:" + folder, Val = "Report Folder: " + folder  });&#xD;
        }&#xD;
        &#xD;
        foreach (var folder in Directory.GetDirectories(report.Repository.DashboardPublicFolder))&#xD;
        {        &#xD;
            foldersEnum.Values.Add(new MetaEV() { Id = "df:" + folder, Val = "Dashboard Folder: " + Path.GetFileName(folder) });&#xD;
        }&#xD;
    }&#xD;
}&#xD;
</InitScript></Report>