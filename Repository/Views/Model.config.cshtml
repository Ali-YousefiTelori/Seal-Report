@using Seal.Model;
@{
    ReportViewTemplate Template = Model;

    //Template Name
    Template.Name = ReportViewTemplate.ModelHTMLName;

    //If true, the view can be configured for a report model
    Template.ForReportModel = true;

    //Parameters for this template
    Template.Parameters.Add(new Parameter() { Name = "show_summary_table", DisplayName = "Display: Show summary table", BoolValue = true, Description = "If true, the summary table created when the model has several pages is displayed." });
    Template.Parameters.Add(new Parameter() { Name = "show_page_tables", DisplayName = "Display: Show page tables", BoolValue = true, Description = "If true, the page tables created when the model has several pages are displayed." });
    Template.Parameters.Add(new Parameter() { Name = "show_data_tables", DisplayName = "Display: Show Data tables", BoolValue = true, Description = "If true, the data tables are displayed." });
    Template.Parameters.Add(new Parameter() { Name = "show_charts", DisplayName = "Display: Show Charts", BoolValue = true, Description = "If true, the charts are displayed." });
    Template.Parameters.Add(new Parameter() { Name = "show_page_separator", DisplayName = "Display: Show page separator", BoolValue = true, Description = "If true, a separator if displayed between each pages of the model" });
    Template.Parameters.Add(new Parameter() { Name = "model_menu_type", DisplayName = "Layout: Menu type", Value = "top", Enums = new string[] { "top|Top Menu", "left|Left Menu", "right|Right Menu", "none|No Menu" }, Description = "The style of the layout when the model has several pages: Either a menu on the Top, Left, Right or no menu." });
    Template.Parameters.Add(new Parameter() { Name = "model_menu_style", DisplayName = "Layout: Menu style", Value = "pill", Enums = new string[] { "tab|Tabs", "pill|Pills" }, Description = "The style of the menu when the model has several pages: Pills or Tabs." });
    Template.Parameters.Add(new Parameter() { Name = "model_menu_width", DisplayName = "Layout: Menu width", NumericValue = 3, Description = "For Left or Right menu, the width of the column between 1 and 11 on 12 spans (default is 3)." });
    Template.Parameters.Add(new Parameter() { Name = "summary_table_caption", DisplayName = "Summary table: Caption", Description = "Optional caption or title displayed at the bottom of the summary table." });
    Template.Parameters.Add(new Parameter() { Name = "display_summary_totals", DisplayName = "Summary table: Display totals", BoolValue = true, Description = "If true, the totals are displayed in the summary table." });
    Template.Parameters.Add(new Parameter() { Name = "add_summary_totals_totals", DisplayName = "Summary table: Add a total of totals line", BoolValue = true, Description = "If true, a line containing the totals is added at the end of the summary table" });
    Template.Parameters.Add(new Parameter() { Name = Parameter.DrillEnabledParameter, DisplayName = "Navigation: Drill enabled", BoolValue = true, Description = "If true, the Drill navigation is enabled in this model if enabled in the root view" });
    Template.Parameters.Add(new Parameter() { Name = Parameter.SubReportsEnabledParameter, DisplayName = "Navigation: Sub-Reports enabled", BoolValue = true, Description = "If true, the Sub-Reports navigation is enabled for this model if enabled in the root view" });
    Template.Parameters.Add(new Parameter() { Name = Parameter.NVD3AddNullPointParameter, DisplayName = "Chart Series: Add points with Null", BoolValue = true, Description = "If true, a point having an Y value equals to NULL will be inserted in the Serie with a 0 value; otherwise no point is inserted (Warning: missing points may cause JavaScript NVD3 errors for certain chart types like Bar, StackedArea, etc...)." });
    Template.Parameters.Add(new Parameter() { Name = "print_break_after_page", DisplayName = "Print: Force a break after a page", BoolValue = false, Description = "If true, a new page is started after a page is displayed for the print layout." });

    //Allowed template parent names
    Template.ParentNames = new List<string>() { "Report", "Tab Page", "Container" };
}
